{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"MEKD","text":"<ul> <li>Maths</li> <li>Estimation</li> <li>Kinematics and Dynamics</li> </ul>"},{"location":"estimation/","title":"State Estimation","text":"<ul> <li>https://cgabc.xyz/categories/State-Estimation/</li> </ul>"},{"location":"estimation/#app","title":"App","text":""},{"location":"estimation/#pose_graph_optimization","title":"Pose Graph Optimization","text":""},{"location":"estimation/#bundle_adjustment","title":"Bundle Adjustment","text":"<ul> <li>Bundle Adjustment (BA) in vSLAM or SFM</li> </ul> <p>Sparse Hessian matrix</p> <p> </p>"},{"location":"estimation/#dataset","title":"Dataset","text":""},{"location":"estimation/#bal_dataset","title":"BAL Dataset","text":"<ul> <li>Bundle Adjustment in the Large</li> </ul>"},{"location":"estimation/#g2o_dataset","title":"g2o Dataset","text":"<ul> <li> <p>g2o format datasets \u2013 Luca Carlone</p> </li> <li> <p>sphere.g2o</p> </li> </ul>"},{"location":"estimation/#books","title":"Books","text":"<ul> <li> <p>Probability, Statistics and Random Processes</p> </li> <li> <p>STATE ESTIMATION FOR ROBOTICS</p> </li> <li> <p>Probabilistic Robotics</p> </li> <li> <p>Factor Graphs for Robot Perception</p> </li> </ul>"},{"location":"estimation/filter/","title":"Bayesian Filter","text":""},{"location":"estimation/filter/#overview","title":"Overview","text":"<ul> <li> <p>The Bayesian Filtering Library (BFL)</p> <ul> <li>bfl (ROS Wiki)</li> </ul> </li> <li> <p>https://github.com/LCAS/bayestracking</p> <ul> <li>C++ framework for Bayesian Filter Tracking (UKF, EKF, Particles)</li> </ul> </li> </ul>"},{"location":"estimation/filter/#kalman_filter","title":"Kalman Filter","text":"<ul> <li> <p>Kalman filter (wikipedia)</p> </li> <li> <p>The Kalman Filter</p> </li> <li>Kalman Filter Tutorial</li> <li> <p>Kalman Filter For Dummies</p> </li> <li> <p>Understanding Kalman Filters (mathworks)</p> </li> <li>THE KALMAN FILTER (ilectureonline)</li> <li> <p>How a Kalman filter works, in pictures</p> </li> <li> <p>http://greg.czerniak.info/guides/kalman1/</p> </li> <li> <p>\u5361\u5c14\u66fc\u6ee4\u6ce2\u7684\u76f4\u89c2\u7406\u89e3</p> </li> </ul> <p>Kalman filter equations</p> Text Only<pre><code>    /*------------------------------------------*\\\n     |  Kalman model                              |\n     |                                            |\n     |  state quation                             |\n     |  x(k) = A.x(k-1)+B.u(k)+w(k-1)             |\n     |                                            |\n     |  observations equation                     |\n     |  z(k) = H.x(k)+y(k)                        |\n     |                                            |\n     |  prediction equations                      |\n     |  x^(k) = A.x^(k-1) + B.u(k)                |\n     |  P^(k) = A.P(k-1).A^T + Q                  |\n     |                                            |\n     |  correction equations                      |\n     |  K(k) = P^(k).H^T . (H.P^(k).H^T + R)^-1   |\n     |  x(k) = x^(k) + K(k).(z(k) - H*x^(k))      |\n     |  P(k) = (I - K(k).H).P^(k)                 |\n     |                                            |\n     \\*------------------------------------------*/\n</code></pre> <p>\u5361\u5c14\u66fc\u6ee4\u6ce2\u5de5\u4f5c\u8fc7\u7a0b\u5206\u4e3a \u9884\u6d4b\u548c\u6d4b\u91cf\u66f4\u65b0\uff0c\u6839\u636e\u4e0a\u4e00\u65f6\u523b\u7684\u72b6\u6001\u548c\u7cfb\u7edf\u6570\u5b66\u6a21\u578b\u9884\u6d4b\u5f53\u524d\u65f6\u523b\u7684\u72b6\u6001\uff0c\u7136\u540e\u5c06\u9884\u6d4b\u7684\u72b6\u6001\u4e0e\u5f53\u524d\u65f6\u523b\u7684\u6d4b\u91cf\u503c\u8fdb\u884c\u201c\u52a0\u6743\u201d\uff0c\u52a0\u6743\u540e\u7684\u7ed3\u679c\u4f5c\u4e3a\u5b9e\u9645\u72b6\u6001\u7684\u6700\u4f18\u4f30\u8ba1\u3002  </p> <p>\u5bf9\u4e8e \u5355\u4f20\u611f\u5668\u7cfb\u7edf \u6765\u8bf4\uff0c\u9884\u6d4b\u90e8\u5206\u7528\u7684\u662f\u7cfb\u7edf\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff08\u6570\u5b66\u6a21\u578b\uff09\uff0c\u66f4\u65b0\u5219\u4f7f\u7528\u4f20\u611f\u5668\u6d4b\u91cf\u503c\u3002\u5bf9\u4e8e \u591a\u4f20\u611f\u5668\u7cfb\u7edf\uff0c\u9884\u6d4b\u90e8\u5206\u7528\u7684\u4e5f\u662f\u6570\u5b66\u6a21\u578b\uff0c\u66f4\u65b0\u5219\u540c\u6b65\u6216\u5f02\u6b65\u66f4\u65b0\u5404\u4e2a\u4f20\u611f\u5668\uff0c\u6bd4\u5982\u63a5\u6536\u5230\u6fc0\u5149\u96f7\u8fbe\u6d4b\u91cf\u503c\u5c31\u66f4\u65b0\u8ddd\u79bb\u72b6\u6001\uff0c\u6beb\u7c73\u6ce2\u96f7\u8fbe\u6d4b\u91cf\u503c\u66f4\u65b0\u901f\u5ea6\u72b6\u6001\uff0c\u8fd9\u5c31\u8fbe\u5230\u4e86\u7ed3\u5408\u5404\u4e2a\u4f20\u611f\u5668\u7684\u4f18\u52bf\u7684\u76ee\u7684\u3002  </p> <p>\u5361\u5c14\u66fc\u6ee4\u6ce2\u662f\u4e00\u79cd \u65f6\u57df\u65b9\u6cd5\uff0c\u9002\u7528\u4e8e\u4f30\u8ba1\u7ebf\u6027\u9ad8\u65af\u52a8\u6001\u7cfb\u7edf\u7684\u6700\u4f18\u72b6\u6001\uff0c\u53ea\u9700\u8981\u77e5\u9053\u524d\u4e00\u65f6\u523b\u7684\u72b6\u6001\u548c\u5f53\u524d\u6d4b\u91cf\u503c\u6765\u5faa\u73af\u8fed\u4ee3\u5f97\u5230\u5f53\u524d\u65f6\u523b\u4e0b\u72b6\u6001\u7684\u6700\u4f18\u4f30\u8ba1\uff0c\u8ba1\u7b97\u91cf\u5c0f\uff0c\u5b9e\u65f6\u6027\u597d\uff0c\u56e0\u6b64\u5728\u5bfc\u822a\u3001\u76ee\u6807\u5b9a\u4f4d\u548c\u8ddf\u8e2a\u3001\u4fe1\u53f7\u5904\u7406\u751a\u81f3\u7ecf\u6d4e\u9886\u57df\u5f97\u5230\u5e7f\u6cdb\u7684\u5e94\u7528\u3002</p>"},{"location":"estimation/filter/#eskf","title":"ESKF","text":""},{"location":"estimation/filter/#nonlinear_filter","title":"Nonlinear Filter","text":"<p>\u5bf9\u4e8e\u975e\u7ebf\u6027\u7cfb\u7edf\uff0c\u53ef\u4ee5\u7528\u6269\u5c55\u5361\u5c14\u66fc\u6ee4\u6ce2\uff08Extended Kalman Filter\uff09\u548c\u65e0\u8ff9\u5361\u5c14\u66fc\u6ee4\u6ce2\uff08Unscented Kalman Filter\uff09\u6765\u4f30\u8ba1\u7cfb\u7edf\u72b6\u6001\u3002</p> <ul> <li> <p>Extended and Unscented Kalman Filter Algorithms for Online State Estimation</p> </li> <li> <p>lightweight_filtering: for implementing EKF and UKF filters</p> </li> </ul>"},{"location":"estimation/filter/#ekf","title":"EKF","text":"<ul> <li>The Extended Kalman Filter: An Interactive Tutorial for Non-Experts</li> </ul>"},{"location":"estimation/filter/#iterated_ekf","title":"Iterated EKF","text":""},{"location":"estimation/filter/#invariant_ekf","title":"Invariant EKF","text":"<ul> <li>https://github.com/contagon/iekf</li> </ul>"},{"location":"estimation/filter/#ukf_unscented_kalman_filter","title":"UKF (Unscented Kalman Filter)","text":"<ul> <li> <p>https://github.com/krishnasandeep09/UKF</p> <ul> <li>UKF using IMU and GNSS data for vehicle or mobile robot localization.</li> </ul> </li> <li> <p>https://github.com/sfwa/ukf</p> </li> <li> <p>https://github.com/CAOR-MINES-ParisTech/ukfm: UKF on (Parallelizable) Manifolds</p> </li> <li> <p>https://github.com/yashv28/Orientation-Estimation-using-Unscented-Kalman-Filter</p> </li> </ul>"},{"location":"estimation/filter/#code","title":"Code","text":"<ul> <li>Understanding Kalman Filters with Python</li> <li>FilterPy is a Python library that implements a number of Bayesian filters, most notably Kalman filters</li> <li>pykalman: the dead-simple Kalman Filter, Kalman Smoother, and EM library for Python</li> <li>rlabbe/Kalman-and-Bayesian-Filters-in-Python: Kalman Filter book using Jupyter Notebook</li> <li>mherb/kalman: Header-only C++11 Kalman Filtering Library (EKF, UKF) based on Eigen3</li> <li>artivis/kalmanif: A small collection of Kalman Filters on Lie groups</li> </ul>"},{"location":"estimation/filter/#books","title":"Books","text":"<ul> <li>\u5361\u5c14\u66fc\u6ee4\u6ce2\u539f\u7406\u53ca\u5e94\u7528\uff1aMATLAB\u4eff\u771f</li> </ul>"},{"location":"estimation/filter/#particle_filter","title":"Particle Filter","text":""},{"location":"estimation/map/","title":"MAP","text":""},{"location":"estimation/map/#optimization","title":"Optimization","text":""},{"location":"estimation/map/#gn","title":"GN","text":""},{"location":"estimation/map/#lm","title":"LM","text":""},{"location":"estimation/map/#dogleg","title":"Dogleg","text":""},{"location":"estimation/solvers/","title":"Solvers","text":""},{"location":"estimation/solvers/#ceres-solver","title":"Ceres-Solver","text":"<ul> <li>Ceres-Solver \u4ece\u5165\u95e8\u5230\u4e0a\u624b\u89c6\u89c9SLAM\u4f4d\u59ff\u4f18\u5316\u95ee\u9898</li> </ul>"},{"location":"estimation/solvers/#g2o","title":"G2O","text":"<ul> <li> <p>Ubuntu 16.04.1 :: error while trying to run g2o_viewer</p> </li> <li> <p>g2o_viewer error</p> </li> </ul>"},{"location":"estimation/solvers/#gtsam","title":"GTSAM","text":""},{"location":"kd/","title":"Kinematics and Dynamics Library","text":""},{"location":"kd/#overview","title":"Overview","text":"<ul> <li>EuclideanSpace - Mathematics and Computing</li> </ul>"},{"location":"kd/#online_tools","title":"Online Tools","text":"<ul> <li>Quaternions Visualization</li> <li>3D Rotation Converter</li> </ul>"},{"location":"kd/#libraries","title":"Libraries","text":"<ul> <li>Eigen Space transformations</li> <li>tf2 (ROS) is the second generation of the transform library, which lets the user keep track of multiple coordinate frames over time</li> <li>Kindr - Kinematics and Dynamics for Robotics</li> <li>ethz-asl/minkindr: A minimal library for transformations, following the kindr interface. Uses active quaternions of rotation in Hamilton notation.</li> <li>RBDL: Rigid Body Dynamics Library</li> <li>orocos KDL: Kinematics and Dynamics Library</li> <li>Spatial Vectors and Rigid-Body Dynamics: Spatial vectors are 6D vectors that simplify the task of describing, analysing, and calculating rigid-body dynamics</li> <li>ethz-asl/geodetic_utils: Simple library for converting coordinates to/from several geodetic frames (lat/lon, ECEF, ENU, NED, etc.)</li> <li>posest: A C/C++ Library for Robust 6DoF Pose Estimation from 3D-2D Correspondences</li> </ul>"},{"location":"kd/#books","title":"Books","text":"<ul> <li>Visualizing Quaternions</li> <li>Rigid Body Dynamics Algorithms</li> </ul>"},{"location":"maths/","title":"Mathematics &amp; Scientific Computing","text":"<ul> <li> <p>Source Code: https://github.com/cggos/scikit</p> </li> <li> <p>Blog (CGABC): https://cgabc.xyz/categories/Maths/</p> </li> </ul>"},{"location":"maths/#overview","title":"Overview","text":"<ul> <li> <p>Mathematics (Wikipedia)</p> </li> <li> <p>S.O.S. MATHematics is your free resource for math review material from Algebra to Differential Equations!</p> </li> <li> <p>UbuntuScience</p> </li> <li> <p>Floating Point Math: https://0.30000000000000004.com/</p> </li> </ul> <p> </p> <p> </p>"},{"location":"maths/#maths_topics","title":"Maths Topics","text":"<ul> <li> <p>Math Basics</p> <ul> <li>\u504f\u5bfc\u6570\u3001\u65b9\u5411\u5bfc\u6570\u3001\u68af\u5ea6\u3001\u5fae\u5206</li> </ul> </li> <li> <p>Linear Algebra</p> <ul> <li>Computational Linear Algebra course</li> <li>Numerical Recipes Home Page</li> </ul> </li> <li> <p>Numerical Analysis</p> </li> <li> <p>Discrete Maths</p> <ul> <li>hongshin/DiscreteMath</li> </ul> </li> <li> <p>Geometry</p> </li> <li> <p>Optimization</p> <ul> <li>State Estimation (CGABC)</li> </ul> </li> </ul>"},{"location":"maths/#programming","title":"Programming","text":"<ul> <li>Mathematical software - swMATH</li> <li>Programs in Mathematics</li> <li>Mathematical Programming Society</li> <li>Math \u2229 Programming</li> </ul>"},{"location":"maths/#books","title":"Books","text":"<ul> <li>Introduction to Scientific Programming: Computational Problem Solving Using Maple and C</li> </ul>"},{"location":"maths/appendix/","title":"Appendix","text":"<ul> <li>Table: Chi-Square Probabilities</li> </ul>"},{"location":"maths/math_libs/","title":"Mathematical Libraries","text":"<p>Mathematical libraries used in development and those usages with CMake.</p> <ul> <li>boost Math Toolkit</li> <li>Netlib Repository at UTK and ORNL</li> <li>CodeCogs: Open Source Scientific Library (C/C++, .NET, Excel)</li> <li>GSL (GNU Scientific Library): a numerical library for C and C++ programmers<ul> <li>GSL Shell offers an interactive command-line interface that gives access to GSL collection of mathematical functions</li> </ul> </li> <li>C++11 Fixed Point Arithmetic Library</li> </ul>"},{"location":"maths/math_libs/#basic_linear_algebra","title":"Basic Linear Algebra","text":"<ul> <li>Boosting numpy: Why BLAS Matters</li> </ul>"},{"location":"maths/math_libs/#blas","title":"BLAS","text":"<p>The BLAS (Basic Linear Algebra Subprograms) are routines that provide standard building blocks for performing basic vector and matrix operations. The Level 1 BLAS perform scalar, vector and vector-vector operations, the Level 2 BLAS perform matrix-vector operations, and the Level 3 BLAS perform matrix-matrix operations. Because the BLAS are efficient, portable, and widely available, they are commonly used in the development of high quality linear algebra software, LAPACK for example.</p>"},{"location":"maths/math_libs/#lapack","title":"LAPACK","text":"<p>LAPACK is written in Fortran 90 and provides routines for solving systems of simultaneous linear equations, least-squares solutions of linear systems of equations, eigenvalue problems, and singular value problems.</p> Bash<pre><code>find_package(LAPACK REQUIRED)\nif(LAPACK_FOUND)\n    message(STATUS \"LAPACK Libraries: \")\n    foreach (lib ${LAPACK_LIBRARIES})\n        message(STATUS \"  \" ${lib})\n    endforeach()\n    link_libraries( ${LAPACK_LIBRARIES} )\nendif()\n</code></pre>"},{"location":"maths/math_libs/#atlas","title":"ATLAS","text":"<p>The ATLAS (Automatically Tuned Linear Algebra Software) project is an ongoing research effort focusing on applying empirical techniques in order to provide portable performance. At present, it provides C and Fortran77 interfaces to a portably efficient BLAS implementation, as well as a few routines from LAPACK.</p>"},{"location":"maths/math_libs/#openblas","title":"OpenBLAS","text":"<p>OpenBLAS is an optimized BLAS library based on GotoBLAS2 1.13 BSD version.</p>"},{"location":"maths/math_libs/#suitesparse","title":"SuiteSparse","text":"<p>SuiteSparse: A Suite of Sparse Matrix Software.</p>"},{"location":"maths/math_libs/#eigen","title":"Eigen","text":"<p>Eigen is a C++ template library for linear algebra: matrices, vectors, numerical solvers, and related algorithms.</p> Bash<pre><code>find_package(Eigen3 REQUIRED)\nif(EIGEN3_FOUND)\n    include_directories( ${EIGEN3_INCLUDE_DIR} )\nendif()\n</code></pre> <ul> <li>Eigen Library Tutorial</li> </ul>"},{"location":"maths/math_libs/#matrix_template_library_mtl2mtl4","title":"Matrix Template Library (MTL2/MTL4)","text":"<p>The Matrix Template Library 4 (MTL4) is a development library for scientific computing that combines high productivity with high performance in the execution.</p>"},{"location":"maths/math_libs/#blitz","title":"Blitz++","text":"<p>Blitz++ is a C++ class library for scientific computing which provides performance on par with Fortran 77/90. It uses template techniques to achieve high performance. Blitz++ provides dense arrays and vectors, random number generators, and small vectors (useful for representing multicomponent or vector fields).</p>"},{"location":"maths/math_libs/#clblast","title":"CLBlast","text":"<p>CLBlast is a modern, lightweight, performant and tunable OpenCL BLAS library written in C++11.</p>"},{"location":"maths/math_libs/#gmp","title":"GMP","text":"<p>GMP is a free library for arbitrary precision arithmetic, operating on signed integers, rational numbers, and floating-point numbers.</p>"},{"location":"maths/math_libs/#lie_theory","title":"Lie theory","text":""},{"location":"maths/math_libs/#toon","title":"TooN","text":"<p>TooN: Tom's Object-oriented numerics library.  The TooN library is a set of C++ header files which provide basic linear algebra facilities.</p> Bash<pre><code># TooN\n# Require linking the LAPACK library\n</code></pre>"},{"location":"maths/math_libs/#sophus","title":"Sophus","text":"<p>C++ implementation of Lie Groups using Eigen commonly used for 2d and 3d geometric problems (i.e. for Computer Vision or Robotics applications).</p> Bash<pre><code>find_package( Sophus REQUIRED )\nif(Sophus_FOUND)\n    include_directories( ${Sophus_INCLUDE_DIRS} )\n    link_libraries( ${Sophus_LIBRARIES} )\nendif()\n</code></pre>"},{"location":"maths/math_libs/#manif","title":"manif","text":"<p>manif is a header-only c++11 Lie theory library for state-estimation targeted at robotics applications</p>"},{"location":"maths/math_libs/#dft","title":"DFT","text":""},{"location":"maths/math_libs/#fftw","title":"FFTW","text":"<p>FFTW is a C subroutine library for computing the discrete Fourier transform (DFT) in one or more dimensions, of arbitrary input size, and of both real and complex data (as well as of even/odd data, i.e. the discrete cosine/sine transforms or DCT/DST).</p>"},{"location":"maths/math_libs/#optimization","title":"Optimization","text":""},{"location":"maths/math_libs/#ceres_solver","title":"Ceres Solver","text":"<p>Ceres Solver is an open source C++ library for modeling and solving large, complicated optimization problems. It can be used to solve Non-linear Least Squares problems with bounds constraints and general unconstrained optimization problems.</p> Bash<pre><code>find_package( Ceres REQUIRED )\nif(Ceres_FOUND)\n    include_directories( ${CERES_INCLUDE_DIRS} )\n    link_libraries( ${CERES_LIBRARIES} )\nendif()\n</code></pre>"},{"location":"maths/math_libs/#g2o","title":"G2O","text":"<p>g2o: A General Framework for Graph Optimization</p> Bash<pre><code>find_package( G2O REQUIRED )\nif(G2O_FOUND)\n    include_directories( ${G2O_INCLUDE_DIRS} )\n    link_libraries( g2o_core g2o_stuff g2o_types_sba )\nendif()\n</code></pre>"},{"location":"maths/math_libs/#ensmallen","title":"ensmallen","text":"<p>ensmallen: flexible C++ library for efficient mathematical optimization</p>"},{"location":"maths/math_libs/#search","title":"Search","text":""},{"location":"maths/math_libs/#ann","title":"ANN","text":"<p>ANN: A Library for Approximate Nearest Neighbor Searching</p>"},{"location":"maths/math_libs/#flann","title":"FLANN","text":"<p>FLANN is a library for performing fast approximate nearest neighbor searches in high dimensional spaces.</p>"},{"location":"maths/math_libs/#annoy","title":"Annoy","text":"<p>Annoy (Approximate Nearest Neighbors Oh Yeah) is a C++ library with Python bindings to search for points in space that are close to a given query point.</p>"},{"location":"maths/math_libs/eigen/","title":"Eigen","text":""},{"location":"maths/math_libs/eigen/#_1","title":"\u57fa\u7840","text":"<ul> <li> <p>\u5224\u65ad\u4e3a\u7a7a   C++<pre><code>MatrixXd A;\nA.isZero(0);\n</code></pre></p> </li> <li> <p>cv::cv2eigen</p> <ul> <li>\u5728 <code>#include &lt;opencv2/core/eigen.hpp&gt;</code> \u4e4b\u524d\u5fc5\u987b\u5148 <code>#include &lt;Eigen/Core&gt;</code></li> <li>\u7ecf\u7b14\u8005\u5b9e\u9a8c\uff0c\u8be5\u8f6c\u6362\u5b58\u5728\u77e9\u9635\u7cbe\u5ea6\u635f\u5931\u7684\u95ee\u9898\uff0c\u5177\u4f53\u662f\u7531\u4e8e\u4ec0\u4e48\u539f\u56e0\u9020\u6210\u7684\uff0c\u5f85\u67e5\u66f4\u65b0</li> </ul> </li> </ul>"},{"location":"maths/math_libs/eigen/#_2","title":"\u9884\u5b9a\u4e49\u5b8f","text":"C++<pre><code>EIGEN_STACK_ALLOCATION_LIMIT\n\nEIGEN_MAX_ALIGN_BYTES\nEIGEN_MAX_STATIC_ALIGN_BYTES\n\nEIGEN_VECTORIZE_SSE2\nEIGEN_VECTORIZE_NEON\n</code></pre>"},{"location":"maths/math_libs/eigen/#_3","title":"\u5185\u5b58\u5206\u914d","text":"<ul> <li>Eigen\u77e9\u9635\u9ed8\u8ba4 \u5217\u5b58\u50a8</li> </ul>"},{"location":"maths/math_libs/eigen/#_4","title":"\u9759\u6001 \u5185\u5b58\u5206\u914d","text":"C++<pre><code>Eigen::Matrix&lt;double, Eigen::Dynamic, Eigen::Dynamic, Eigen::ColMajor, 16, 1000&gt; A400; // \u9759\u6001\u5206\u914d\u5185\u5b58\n</code></pre>"},{"location":"maths/math_libs/eigen/#_5","title":"\u52a8\u6001 \u5185\u5b58\u5206\u914d","text":"C++<pre><code>Eigen::MatrixXd A;\n</code></pre>"},{"location":"maths/math_libs/eigen/#_6","title":"\u5b57\u8282\u5bf9\u9f50","text":""},{"location":"maths/math_libs/eigen/#vectorization","title":"Vectorization","text":""},{"location":"maths/math_libs/eigen/#_7","title":"\u5b57\u8282\u5bf9\u9f50","text":"<ul> <li>Eigen::aligned_allocator   C++<pre><code>std::map&lt;int, Eigen::Vector4f&gt; \n// --&gt;\nstd::map&lt;int, Eigen::Vector4f, std::less&lt;int&gt;, Eigen::aligned_allocator&lt;std::pair&lt;const int, Eigen::Vector4f&gt;&gt;&gt;\n</code></pre></li> </ul>"},{"location":"maths/math_libs/eigen/#simd","title":"SIMD","text":"<ul> <li>SSE</li> <li>NEON </li> </ul>"},{"location":"maths/math_libs/eigen/#lazy_evaluation_and_aliasing","title":"Lazy Evaluation and Aliasing","text":"<ul> <li>https://eigen.tuxfamily.org/dox/TopicLazyEvaluation.html</li> </ul> C++<pre><code>eval()\n\nevalTo()\n\nnoalias()\n\nXXXinPlace()\n</code></pre>"},{"location":"maths/math_libs/eigen/#_8","title":"\u77e9\u9635\u4e58\u79ef","text":"<ul> <li>\u52a0\u901f\uff1a\u5206\u6cbb\u6cd5\uff08\u77e9\u9635\u5206\u5757\u4e58\u79ef\uff09</li> </ul>"}]}